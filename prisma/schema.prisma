generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model catalogue {
  id                           Int       @id @default(autoincrement())
  quantite                     Int?
  dateApprovisionnement        DateTime? @db.Date
  produitId                    Int?
  updatedAt                    DateTime  @updatedAt
  produit                      produit?  @relation(fields: [produitId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_produit")
  
  @@index([produitId], map: "fk_produit_idx")
}

model categorieproduit {
  id                 Int       @id @default(autoincrement())
  nom                String?   @db.VarChar(1000)
  produit            produit[]
}

model client {
  id        Int       @id @default(autoincrement())
  nom       String?   @db.VarChar(45)
  prenom    String?   @db.VarChar(45)
  numero    String?   @db.VarChar(45)
  motPasse  String?   @db.VarChar(45)
  pannier   pannier[]
}

model ligneproduit {
  id               Int          @id @default(autoincrement())
  quantite         Int?
  prix             Int?
  produitId        Int?
  packproduitId           Int?
  pannierId        Int?
  packproduit      packproduit? @relation(fields: [packproduitId], references: [id], onDelete: SetNull, map: "packproduitId")
  pannier          pannier?     @relation(fields: [pannierId], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "pannierId")
  produit          produit?     @relation(fields: [produitId], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "produitId")

  @@index([packproduitId], map: "idPack_idx")
  @@index([pannierId], map: "idPannier_idx")
  @@index([produitId], map: "idProduit_idx")
}

model packproduit {
  id            Int            @id @default(autoincrement())
  nom           String?        @db.VarChar(45)
  prix          Int?
  description   String?        @db.VarChar(1000)
  photoURL      String?        @db.VarChar(1000)
  ligneproduit  ligneproduit[]
}

model pannier {
  id               Int             @id @default(autoincrement())
  prix             Float            
  date             DateTime        @default(now())
  pointramassageId Int?
  clientId         Int?
  moyenPaiement    String          @db.VarChar(45)
  statut           String?         @db.VarChar(45)
  client           client?         @relation(fields: [clientId], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "clientId")
  pointramassage   pointramassage? @relation(fields: [pointramassageId], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "pointramassageId")
  ligneproduit     ligneproduit[]

  @@index([clientId], map: "idClient_idx")
  @@index([pointramassageId], map: "idPointRamassage_idx")
}

model pointramassage {
  id               Int                   @id @default(autoincrement())
  nom              String?               @db.VarChar(45)
  latitude         Float?
  longitude        Float?
  pannier          pannier[]
}

model producteur {
  id                     Int                      @id @default(autoincrement())
  nom                    String?                  @db.VarChar(45)
  prenom                 String?                  @db.VarChar(45)
  longitude               Float?
  latitude               Float?
  preinscriptionValide   String?                  @db.VarChar(45) @default("en attente")
  numero                 String?                  @db.VarChar(45)
  motPasse               String?                  @db.VarChar(45)
  producteur_has_produit producteur_has_produit[]
}

model producteur_has_produit {
  producteurId           Int                      @default(autoincrement())
  produitId              Int
  conditionnement        String?                  @db.VarChar(45)
  saisonnier             String?                  @db.VarChar(45)
  frequenceProduction    String?                  @db.VarChar(45)
  volumeProduction       String?                  @db.VarChar(45)
  statut                 String?                  @db.VarChar(45) @default("en attente")
  photoURL               String?                  @db.VarChar(1000)
  producteur             producteur               @relation(fields: [producteurId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_Producteur_has_Produit_Producteur1")
  produit                produit                  @relation(fields: [produitId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_Producteur_has_Produit_Produit1")

  @@id([producteurId, produitId])
  @@index([producteurId], map: "fk_Producteur_has_Produit_Producteur1_idx")
  @@index([produitId], map: "fk_Producteur_has_Produit_Produit1_idx")
}

model produit {
  id                     Int                      @id @default(autoincrement())
  nom                    String?                  @db.VarChar(45)
  prix                   Int?
  photoURL               String?                  @db.VarChar(1000)
  description            String?                  @db.VarChar(1000)
  categorieproduitId     Int?
  statut                 String?                  @db.VarChar(1000)
  categorieproduit       categorieproduit?        @relation(fields: [categorieproduitId], references: [id], onDelete: SetNull, onUpdate: NoAction, map: "fk_Produit_CategorieProduit1")
  catalogue              catalogue[]
  ligneproduit           ligneproduit[]
  producteur_has_produit producteur_has_produit[]

  @@index([categorieproduitId], map: "fk_Produit_CategorieProduit1_idx")
}

model ropert {
  id        Int     @id @default(autoincrement())
  nom       String? @db.VarChar(45)
  prenom    String? @db.VarChar(45)
  email     String? @db.VarChar(45)
  motPasse  String? @db.VarChar(1000)
}

model admin {
  id        Int     @id @default(autoincrement())
  nom       String? @db.VarChar(45)
  prenom    String? @db.VarChar(45)
  email     String? @db.VarChar(45)
  motPasse  String? @db.VarChar(1000)
}